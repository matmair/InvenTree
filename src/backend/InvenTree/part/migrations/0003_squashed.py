# Generated by Django 4.2.17 on 2025-01-05 12:47

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    replaces = [('part', '0001_initial'), ('part', '0002_auto_20190520_2204'), ('part', '0003_auto_20190525_2226'), ('part', '0004_auto_20190525_2356'), ('part', '0005_auto_20190526_1119'), ('part', '0006_auto_20190526_1215'), ('part', '0007_auto_20190602_1944'), ('part', '0008_auto_20190618_0042'), ('part', '0009_part_virtual'), ('part', '0010_auto_20190620_2135'), ('part', '0011_part_revision'), ('part', '0012_auto_20190627_2144'), ('part', '0013_auto_20190628_0951'), ('part', '0014_partparameter'), ('part', '0015_auto_20190820_0251'), ('part', '0016_auto_20190820_0257'), ('part', '0017_bomitem_checksum'), ('part', '0018_auto_20190907_0941'), ('part', '0019_auto_20190908_0404'), ('part', '0020_auto_20190908_0404'), ('part', '0021_auto_20190908_0916'), ('part', '0022_auto_20190908_0918'), ('part', '0023_auto_20190913_1401'), ('part', '0024_auto_20191118_2139'), ('part', '0025_auto_20191118_2316'), ('part', '0026_auto_20200131_1022'), ('part', '0027_auto_20200202_1024'), ('part', '0028_auto_20200203_1007'), ('part', '0029_auto_20200223_0901'), ('part', '0030_auto_20200318_1027'), ('part', '0031_auto_20200318_1044'), ('part', '0032_auto_20200322_0453'), ('part', '0033_auto_20200404_0445'), ('part', '0034_auto_20200404_1238'), ('part', '0035_auto_20200406_0045'), ('part', '0036_partattachment_user'), ('part', '0037_partattachment_upload_date'), ('part', '0038_auto_20200513_0016'), ('part', '0039_auto_20200515_1127'), ('part', '0040_parttesttemplate'), ('part', '0041_auto_20200517_0348'), ('part', '0042_auto_20200518_0900'), ('part', '0043_auto_20200527_0005'), ('part', '0044_auto_20200605_0931'), ('part', '0045_auto_20200605_0932'), ('part', '0046_auto_20200804_0107'), ('part', '0047_auto_20200808_0715'), ('part', '0048_auto_20200902_1404'), ('part', '0049_partsellpricebreak'), ('part', '0050_auto_20200917_2315'), ('part', '0051_bomitem_optional'), ('part', '0052_partrelated'), ('part', '0054_auto_20201109_1246'), ('part', '0055_auto_20201110_1001'), ('part', '0056_auto_20201110_1125'), ('part', '0057_remove_partsellpricebreak_currency'), ('part', '0058_remove_partsellpricebreak_cost'), ('part', '0059_auto_20201112_1112'), ('part', '0053_partcategoryparametertemplate'), ('part', '0060_merge_20201112_1722'), ('part', '0061_auto_20210104_2331'), ('part', '0061_auto_20210103_2313'), ('part', '0062_merge_20210105_0056'), ('part', '0063_bomitem_inherited'), ('part', '0064_auto_20210404_2016'), ('part', '0065_auto_20210505_2144'), ('part', '0066_bomitem_allow_variants'), ('part', '0067_partinternalpricebreak'), ('part', '0068_part_unique_part'), ('part', '0069_auto_20210701_0509'), ('part', '0070_alter_part_variant_of'), ('part', '0071_alter_partparametertemplate_name'), ('part', '0072_bomitemsubstitute'), ('part', '0073_auto_20211013_1048'), ('part', '0074_partcategorystar'), ('part', '0075_auto_20211128_0151'), ('part', '0076_auto_20220516_0819'), ('part', '0077_alter_bomitem_unique_together'), ('part', '0078_auto_20220606_0024'), ('part', '0079_alter_part_notes'), ('part', '0080_alter_part_image'), ('part', '0081_alter_partcategory_name'), ('part', '0082_partcategory_pathstring'), ('part', '0083_auto_20220731_2357'), ('part', '0084_partcategory_icon'), ('part', '0085_partparametertemplate_description'), ('part', '0086_auto_20220912_0007'), ('part', '0087_bomitem_consumable'), ('part', '0088_alter_partparametertemplate_name'), ('part', '0089_auto_20221112_0128'), ('part', '0090_auto_20221115_0816'), ('part', '0091_partstocktake'), ('part', '0092_part_last_stocktake'), ('part', '0093_auto_20230115_1404'), ('part', '0094_alter_part_units'), ('part', '0095_alter_part_responsible'), ('part', '0096_auto_20230211_0029'), ('part', '0097_partstocktakereport'), ('part', '0098_auto_20230214_1115'), ('part', '0099_alter_bomitem_inherited'), ('part', '0100_alter_bomitem_reference'), ('part', '0101_bomitem_validated'), ('part', '0102_auto_20230314_0112'), ('part', '0103_auto_20230317_0816'), ('part', '0104_alter_part_description'), ('part', '0105_alter_part_notes'), ('part', '0106_part_tags'), ('part', '0107_alter_part_tags'), ('part', '0108_auto_20230516_1334'), ('part', '0109_auto_20230517_1048'), ('part', '0110_alter_part_units'), ('part', '0111_auto_20230521_1350'), ('part', '0112_auto_20230525_1606'), ('part', '0113_auto_20230531_1205'), ('part', '0114_alter_part_minimum_stock'), ('part', '0115_part_responsible_owner'), ('part', '0116_auto_20231023_0332'), ('part', '0117_remove_part_responsible'), ('part', '0118_auto_20231024_1844'), ('part', '0119_auto_20231120_0457'), ('part', '0120_parttesttemplate_key'), ('part', '0121_auto_20240207_0344'), ('part', '0122_parttesttemplate_enabled'), ('part', '0123_parttesttemplate_choices'), ('part', '0124_delete_partattachment'), ('part', '0125_part_locked'), ('part', '0126_part_revision_of'), ('part', '0127_remove_partcategory_icon_partcategory__icon'), ('part', '0128_part_testable'), ('part', '0129_auto_20240815_0214'), ('part', '0130_alter_parttesttemplate_part'), ('part', '0131_partrelated_note'), ('part', '0132_partparametertemplate_selectionlist')]

    dependencies = [
        ("users", "0001_squashed"),
        ("part", "0002_squashed"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.AddField(
            model_name="part",
            name="responsible_owner",
            field=models.ForeignKey(
                blank=True,
                help_text="Owner responsible for this part",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parts_responsible",
                to="users.owner",
                verbose_name="Responsible",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="revision_of",
            field=models.ForeignKey(
                blank=True,
                help_text="Is this part a revision of another part?",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="revisions",
                to="part.part",
                verbose_name="Revision Of",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="variant_of",
            field=models.ForeignKey(
                blank=True,
                help_text="Is this part a variant of another part?",
                limit_choices_to={"is_template": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="variants",
                to="part.part",
                verbose_name="Variant Of",
            ),
        ),
        migrations.AddField(
            model_name="bomitemsubstitute",
            name="bom_item",
            field=models.ForeignKey(
                help_text="Parent BOM item",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="substitutes",
                to="part.bomitem",
                verbose_name="BOM Item",
            ),
        ),
        migrations.AddField(
            model_name="bomitemsubstitute",
            name="part",
            field=models.ForeignKey(
                help_text="Substitute part",
                limit_choices_to={"component": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="substitute_items",
                to="part.part",
                verbose_name="Part",
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="part",
            field=models.ForeignKey(
                help_text="Select parent part",
                limit_choices_to={"assembly": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bom_items",
                to="part.part",
                verbose_name="Part",
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="sub_part",
            field=models.ForeignKey(
                help_text="Select part to be used in BOM",
                limit_choices_to={"component": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="used_in",
                to="part.part",
                verbose_name="Sub part",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="partstar",
            unique_together={("part", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="partsellpricebreak",
            unique_together={("part", "quantity")},
        ),
        migrations.AlterUniqueTogether(
            name="partrelated",
            unique_together={("part_1", "part_2")},
        ),
        migrations.AlterUniqueTogether(
            name="partparameter",
            unique_together={("part", "template")},
        ),
        migrations.AlterUniqueTogether(
            name="partinternalpricebreak",
            unique_together={("part", "quantity")},
        ),
        migrations.AlterUniqueTogether(
            name="partcategorystar",
            unique_together={("category", "user")},
        ),
        migrations.AddConstraint(
            model_name="partcategoryparametertemplate",
            constraint=models.UniqueConstraint(
                fields=("category", "parameter_template"),
                name="unique_category_parameter_template_pair",
            ),
        ),
        migrations.AddConstraint(
            model_name="part",
            constraint=models.UniqueConstraint(
                fields=("name", "IPN", "revision"), name="unique_part"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bomitemsubstitute",
            unique_together={("part", "bom_item")},
        ),
    ]
