# Generated by Django 4.2 on 2023-06-11 01:39

import InvenTree.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ("build", "0001_initial"),
        ("build", "0002_auto_20190520_2204"),
        ("build", "0003_auto_20190525_2355"),
        ("build", "0004_auto_20190525_2356"),
        ("build", "0005_auto_20190604_2217"),
        ("build", "0006_auto_20190913_1407"),
        ("build", "0007_auto_20191118_2321"),
        ("build", "0008_auto_20200201_1247"),
        ("build", "0009_auto_20200210_1032"),
        ("build", "0010_auto_20200318_1027"),
        ("build", "0011_auto_20200406_0123"),
    ]

    initial = True

    dependencies = [
        ("stock", "0001_initial"),
        ("part", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Build",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Brief description of the build", max_length=100
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of parts to build",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "status",
                    models.PositiveIntegerField(
                        choices=[
                            (10, "Pending"),
                            (20, "Allocated"),
                            (30, "Cancelled"),
                            (40, "Complete"),
                        ],
                        default=10,
                        help_text="Build status",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "batch",
                    models.CharField(
                        blank=True,
                        help_text="Batch code for this build output",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("creation_date", models.DateField(auto_now_add=True)),
                ("completion_date", models.DateField(blank=True, null=True)),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True, help_text="Link to external URL"
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Extra build notes")),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="builds_completed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "part",
                    models.ForeignKey(
                        help_text="Select part to build",
                        limit_choices_to={
                            "active": True,
                            "assembly": True,
                            "is_template": False,
                            "virtual": False,
                        },
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="builds",
                        to="part.part",
                    ),
                ),
                (
                    "take_from",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select location to take stock from for this build (leave blank to take from any stock location)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sourcing_builds",
                        to="stock.stocklocation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuildItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Stock quantity to allocate to build",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "build",
                    models.ForeignKey(
                        help_text="Build to allocate parts",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allocated_stock",
                        to="build.build",
                    ),
                ),
                (
                    "stock_item",
                    models.ForeignKey(
                        help_text="Stock Item to allocate to build",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allocations",
                        to="stock.stockitem",
                    ),
                ),
            ],
            options={
                "unique_together": {("build", "stock_item")},
            },
        ),
    ]
