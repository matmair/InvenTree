# Generated by Django 4.2 on 2023-06-11 01:48

import InvenTree.fields
import InvenTree.models
import build.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    replaces = [
        ("build", "0017_auto_20200426_0612"),
        ("build", "0018_build_reference"),
        ("build", "0019_auto_20201019_1302"),
        ("build", "0020_auto_20201019_1325"),
        ("build", "0021_auto_20201020_0908_squashed_0026_auto_20201023_1228"),
        ("build", "0022_buildorderattachment"),
        ("build", "0023_auto_20201110_0911"),
        ("build", "0024_auto_20201201_1023"),
        ("build", "0025_build_target_date"),
        ("build", "0026_auto_20210216_1539"),
        ("build", "0027_auto_20210404_2016"),
        ("build", "0028_builditem_bom_item"),
        ("build", "0029_auto_20210601_1525"),
        ("build", "0030_alter_build_reference"),
        ("build", "0031_build_reference_int"),
        ("build", "0032_auto_20211014_0632"),
        ("build", "0033_auto_20211128_0151"),
        ("build", "0034_alter_build_reference_int"),
        ("build", "0035_alter_build_notes"),
        ("build", "0036_auto_20220707_1101"),
        ("build", "0037_build_priority"),
        ("build", "0038_alter_build_responsible"),
        ("build", "0039_auto_20230317_0816"),
        ("build", "0040_auto_20230404_1310"),
        ("build", "0041_alter_build_title"),
        ("build", "0042_alter_build_notes"),
    ]

    dependencies = [
        ("part", "0066_bomitem_allow_variants"),
        ("stock", "0054_remove_stockitem_build_order"),
        ("stock", "0058_stockitem_packaging"),
        ("build", "0016_auto_20200426_0551"),
        ("part", "0051_bomitem_optional"),
        ("stock", "0052_stockitem_is_building"),
        ("stock", "0034_auto_20200426_0602"),
        ("users", "0005_owner_model"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="builditem",
            name="stock_item",
            field=models.ForeignKey(
                help_text="Stock Item to allocate to build",
                limit_choices_to={
                    "belongs_to": None,
                    "build_order": None,
                    "sales_order": None,
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="stock.stockitem",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="reference",
            field=models.CharField(
                help_text="Build Order Reference",
                max_length=64,
                unique=True,
                verbose_name="Reference",
            ),
        ),
        migrations.AlterModelOptions(
            name="build",
            options={
                "verbose_name": "Build Order",
                "verbose_name_plural": "Build Orders",
            },
        ),
        migrations.AlterField(
            model_name="build",
            name="reference",
            field=models.CharField(
                help_text="Build Order Reference",
                max_length=64,
                unique=True,
                validators=[build.validators.validate_build_order_reference],
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="title",
            field=models.CharField(
                help_text="Brief description of the build",
                max_length=100,
                verbose_name="Description",
            ),
        ),
        migrations.AddField(
            model_name="builditem",
            name="install_into",
            field=models.ForeignKey(
                blank=True,
                help_text="Destination stock item",
                limit_choices_to={"is_building": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="items_to_install",
                to="stock.stockitem",
            ),
        ),
        migrations.AlterField(
            model_name="builditem",
            name="stock_item",
            field=models.ForeignKey(
                help_text="Source stock item",
                limit_choices_to={
                    "belongs_to": None,
                    "build_order": None,
                    "sales_order": None,
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="stock.stockitem",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="destination",
            field=models.ForeignKey(
                blank=True,
                help_text="Select location where the completed items will be stored",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="incoming_builds",
                to="stock.stocklocation",
                verbose_name="Destination Location",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="BuildOrder to which this build is allocated",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="children",
                to="build.build",
                verbose_name="Parent Build",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "Pending"),
                    (20, "Production"),
                    (30, "Cancelled"),
                    (40, "Complete"),
                ],
                default=10,
                help_text="Build status code",
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Build Status",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="part",
            field=models.ForeignKey(
                help_text="Select part to build",
                limit_choices_to={"active": True, "assembly": True, "virtual": False},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="builds",
                to="part.part",
                verbose_name="Part",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="completed",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Number of stock items which have been completed",
                verbose_name="Completed items",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="quantity",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Number of stock items to build",
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="Build Quantity",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="builditem",
            unique_together={("build", "stock_item", "install_into")},
        ),
        migrations.AlterField(
            model_name="builditem",
            name="stock_item",
            field=models.ForeignKey(
                help_text="Source stock item",
                limit_choices_to={"belongs_to": None, "sales_order": None},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="stock.stockitem",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="BuildOrder to which this build is allocated",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="children",
                to="build.build",
                verbose_name="Parent Build",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="target_date",
            field=models.DateField(
                blank=True,
                help_text="Target date for build completion. Build will be overdue after this date.",
                null=True,
                verbose_name="Target completion date",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="completed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="builds_completed",
                to=settings.AUTH_USER_MODEL,
                verbose_name="completed by",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="completion_date",
            field=models.DateField(
                blank=True, null=True, verbose_name="Completion Date"
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="creation_date",
            field=models.DateField(auto_now_add=True, verbose_name="Creation Date"),
        ),
        migrations.AddField(
            model_name="build",
            name="issued_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who issued this build order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="builds_issued",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Issued by",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                help_text="User or group responsible for this build order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="builds_responsible",
                to="users.owner",
                verbose_name="Responsible",
            ),
        ),
        migrations.AlterField(
            model_name="builditem",
            name="stock_item",
            field=models.ForeignKey(
                help_text="Source stock item",
                limit_choices_to={"belongs_to": None, "sales_order": None},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="stock.stockitem",
                verbose_name="Stock Item",
            ),
        ),
        migrations.AddField(
            model_name="builditem",
            name="bom_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocate_build_items",
                to="part.bomitem",
            ),
        ),
        migrations.AlterField(
            model_name="builditem",
            name="build",
            field=models.ForeignKey(
                help_text="Build to allocate parts",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocated_stock",
                to="build.build",
                verbose_name="Build",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="reference",
            field=models.CharField(
                default=build.validators.generate_next_build_reference,
                help_text="Build Order Reference",
                max_length=64,
                unique=True,
                validators=[build.validators.validate_build_order_reference],
                verbose_name="Reference",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="reference_int",
            field=models.BigIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="builditem",
            name="install_into",
            field=models.ForeignKey(
                blank=True,
                help_text="Destination stock item",
                limit_choices_to={"is_building": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="items_to_install",
                to="stock.stockitem",
                verbose_name="Install into",
            ),
        ),
        migrations.CreateModel(
            name="BuildOrderAttachment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        help_text="Select file to attach",
                        null=True,
                        upload_to=InvenTree.models.rename_attachment,
                        verbose_name="Attachment",
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="File comment",
                        max_length=100,
                        verbose_name="Comment",
                    ),
                ),
                (
                    "upload_date",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="upload date"
                    ),
                ),
                (
                    "build",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="build.build",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external URL",
                        null=True,
                        verbose_name="Link",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="build",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Extra build notes",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="builditem",
            name="quantity",
            field=models.DecimalField(
                decimal_places=5,
                default=1,
                help_text="Stock quantity to allocate to build",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Quantity",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="priority",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Priority of this build order",
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Build Priority",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="builditem",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="title",
            field=models.CharField(
                blank=True,
                help_text="Brief description of the build (optional)",
                max_length=100,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Markdown notes (optional)",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
    ]
