# Generated by Django 4.2.17 on 2025-01-05 12:47

import InvenTree.fields
import InvenTree.models
import build.status_codes
import build.validators
import django.core.validators
from django.db import migrations, models
import generic.states.fields
import generic.states.states
import generic.states.transition
import generic.states.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Build",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                ("reference_int", models.BigIntegerField(default=0)),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=build.validators.generate_next_build_reference,
                        help_text="Build Order Reference",
                        max_length=64,
                        unique=True,
                        validators=[build.validators.validate_build_order_reference],
                        verbose_name="Reference",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Brief description of the build (optional)",
                        max_length=100,
                        verbose_name="Description",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of stock items to build",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Build Quantity",
                    ),
                ),
                (
                    "completed",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of stock items which have been completed",
                        verbose_name="Completed items",
                    ),
                ),
                (
                    "status",
                    generic.states.fields.InvenTreeCustomStatusModelField(
                        choices=[
                            (10, "Pending"),
                            (20, "Production"),
                            (25, "On Hold"),
                            (30, "Cancelled"),
                            (40, "Complete"),
                        ],
                        default=10,
                        help_text="Build status code",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=build.status_codes.BuildStatus
                            ),
                        ],
                        verbose_name="Build Status",
                    ),
                ),
                (
                    "batch",
                    models.CharField(
                        blank=True,
                        help_text="Batch code for this build output",
                        max_length=100,
                        null=True,
                        verbose_name="Batch Code",
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(auto_now_add=True, verbose_name="Creation Date"),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for build completion. Build will be overdue after this date.",
                        null=True,
                        verbose_name="Target completion date",
                    ),
                ),
                (
                    "completion_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Completion Date"
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external URL",
                        verbose_name="External Link",
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Priority of this build order",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Build Priority",
                    ),
                ),
                (
                    "status_custom_key",
                    generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                        blank=True,
                        default=None,
                        help_text="Additional status information for this item",
                        null=True,
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=build.status_codes.BuildStatus
                            )
                        ],
                        verbose_name="Custom status key",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Build Order",
                "verbose_name_plural": "Build Orders",
            },
            bases=(
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                generic.states.transition.StateTransitionMixin,
                generic.states.states.StatusCodeMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="BuildItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Stock quantity to allocate to build",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
            ],
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="BuildLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Required quantity for build order",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Build Order Line Item",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
    ]
