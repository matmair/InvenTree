# Generated by Django 4.2.17 on 2025-01-05 12:47

import InvenTree.fields
import InvenTree.models
import InvenTree.validators
import common.currency
import company.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title describing the address entry",
                        max_length=100,
                        verbose_name="Address title",
                    ),
                ),
                (
                    "primary",
                    models.BooleanField(
                        default=False,
                        help_text="Set as primary address",
                        verbose_name="Primary address",
                    ),
                ),
                (
                    "line1",
                    models.CharField(
                        blank=True,
                        help_text="Address line 1",
                        max_length=50,
                        verbose_name="Line 1",
                    ),
                ),
                (
                    "line2",
                    models.CharField(
                        blank=True,
                        help_text="Address line 2",
                        max_length=50,
                        verbose_name="Line 2",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        help_text="Postal code",
                        max_length=10,
                        verbose_name="Postal code",
                    ),
                ),
                (
                    "postal_city",
                    models.CharField(
                        blank=True,
                        help_text="Postal code city/region",
                        max_length=50,
                        verbose_name="City/Region",
                    ),
                ),
                (
                    "province",
                    models.CharField(
                        blank=True,
                        help_text="State or province",
                        max_length=50,
                        verbose_name="State/Province",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Address country",
                        max_length=50,
                        verbose_name="Country",
                    ),
                ),
                (
                    "shipping_notes",
                    models.CharField(
                        blank=True,
                        help_text="Notes for shipping courier",
                        max_length=100,
                        verbose_name="Courier shipping notes",
                    ),
                ),
                (
                    "internal_shipping_notes",
                    models.CharField(
                        blank=True,
                        help_text="Shipping notes for internal use",
                        max_length=100,
                        verbose_name="Internal shipping notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to address information (external)",
                        verbose_name="Link",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Company name",
                        max_length=100,
                        verbose_name="Company name",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Description of the company",
                        max_length=500,
                        verbose_name="Company description",
                    ),
                ),
                (
                    "website",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Company website URL",
                        verbose_name="Website",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number",
                        max_length=50,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Contact email address",
                        max_length=254,
                        null=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "contact",
                    models.CharField(
                        blank=True,
                        help_text="Point of contact",
                        max_length=100,
                        verbose_name="Contact",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external company information",
                        verbose_name="Link",
                    ),
                ),
                (
                    "image",
                    stdimage.models.StdImageField(
                        blank=True,
                        force_min_size=False,
                        null=True,
                        upload_to=company.models.rename_company_image,
                        variations={"preview": (256, 256), "thumbnail": (128, 128)},
                        verbose_name="Image",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this company active?",
                        verbose_name="Active",
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False,
                        help_text="Do you sell items to this company?",
                        verbose_name="Is customer",
                    ),
                ),
                (
                    "is_supplier",
                    models.BooleanField(
                        default=True,
                        help_text="Do you purchase items from this company?",
                        verbose_name="Is supplier",
                    ),
                ),
                (
                    "is_manufacturer",
                    models.BooleanField(
                        default=False,
                        help_text="Does this company manufacture parts?",
                        verbose_name="Is manufacturer",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        blank=True,
                        default=common.currency.currency_code_default,
                        help_text="Default currency used for this company",
                        max_length=3,
                        validators=[InvenTree.validators.validate_currency_code],
                        verbose_name="Currency",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
                "ordering": ["name"],
            },
            bases=(
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("phone", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("role", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "Contact",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ManufacturerPartParameter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Parameter name", max_length=500, verbose_name="Name"
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Parameter value",
                        max_length=500,
                        verbose_name="Value",
                    ),
                ),
                (
                    "units",
                    models.CharField(
                        blank=True,
                        help_text="Parameter units",
                        max_length=64,
                        null=True,
                        verbose_name="Units",
                    ),
                ),
            ],
            options={
                "verbose_name": "Manufacturer Part Parameter",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SupplierPart",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of last update",
                        null=True,
                        verbose_name="Updated",
                    ),
                ),
                (
                    "SKU",
                    models.CharField(
                        help_text="Supplier stock keeping unit",
                        max_length=100,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this supplier part active?",
                        verbose_name="Active",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="URL for external supplier part link",
                        null=True,
                        verbose_name="Link",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Supplier part description",
                        max_length=250,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "note",
                    models.CharField(
                        blank=True,
                        help_text="Notes",
                        max_length=100,
                        null=True,
                        verbose_name="Note",
                    ),
                ),
                (
                    "base_cost",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Minimum charge (e.g. stocking fee)",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="base cost",
                    ),
                ),
                (
                    "packaging",
                    models.CharField(
                        blank=True,
                        help_text="Part packaging",
                        max_length=50,
                        null=True,
                        verbose_name="Packaging",
                    ),
                ),
                (
                    "pack_quantity",
                    models.CharField(
                        blank=True,
                        help_text="Total quantity supplied in a single pack. Leave empty for single items.",
                        max_length=25,
                        verbose_name="Pack Quantity",
                    ),
                ),
                (
                    "pack_quantity_native",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=10, default=1, max_digits=20, null=True
                    ),
                ),
                (
                    "multiple",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Order multiple",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="multiple",
                    ),
                ),
                (
                    "available",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Quantity available from supplier",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Available",
                    ),
                ),
                (
                    "availability_updated",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date of last update of availability data",
                        null=True,
                        verbose_name="Availability Updated",
                    ),
                ),
                (
                    "manufacturer_part",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select manufacturer part",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_parts",
                        to="company.manufacturerpart",
                        verbose_name="Manufacturer Part",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier Part",
                "db_table": "part_supplierpart",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ManufacturerPart",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "MPN",
                    models.CharField(
                        help_text="Manufacturer Part Number",
                        max_length=100,
                        null=True,
                        verbose_name="MPN",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="URL for external manufacturer part link",
                        null=True,
                        verbose_name="Link",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Manufacturer part description",
                        max_length=250,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Manufacturer Part",
            },
            bases=(
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="SupplierPriceBreak",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of last update",
                        null=True,
                        verbose_name="Updated",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Price break quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Unit price at specified quantity",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "part",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricebreaks",
                        to="company.supplierpart",
                        verbose_name="Part",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier Price Break",
                "db_table": "part_supplierpricebreak",
            },
        ),
    ]
