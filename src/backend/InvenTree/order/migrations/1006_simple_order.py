# Generated by Django 4.2 on 2023-06-11 02:17

import InvenTree.fields
import InvenTree.models
import InvenTree.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import mptt.fields
import order.validators


class Migration(migrations.Migration):

    replaces = [
        ("order", "0031_auto_20200426_0612"),
        ("order", "0032_auto_20200427_0044"),
        ("order", "0033_auto_20200512_1033"),
        ("order", "0034_auto_20200512_1054"),
        ("order", "0035_auto_20200513_0016"),
        ("order", "0036_auto_20200831_0912"),
        ("order", "0037_auto_20201110_0911"),
        ("order", "0038_auto_20201112_1737"),
        ("order", "0039_auto_20201112_2203"),
        ("order", "0040_salesorder_target_date"),
        ("order", "0041_auto_20210114_1728"),
        ("order", "0042_auto_20210310_1619"),
        ("order", "0043_auto_20210330_0013"),
        ("order", "0044_auto_20210404_2016"),
        ("order", "0045_auto_20210504_1946"),
        ("order", "0046_purchaseorderlineitem_destination"),
        ("order", "0047_auto_20210701_0509"),
        ("order", "0048_auto_20210702_2321"),
        ("order", "0049_alter_purchaseorderlineitem_unique_together"),
        ("order", "0050_alter_purchaseorderlineitem_destination"),
        ("order", "0051_auto_20211014_0623"),
        ("order", "0052_auto_20211014_0631"),
        ("order", "0053_auto_20211128_0151"),
        ("order", "0053_salesordershipment"),
        ("order", "0054_salesorderallocation_shipment"),
        ("order", "0055_auto_20211025_0645"),
        ("order", "0056_alter_salesorderallocation_shipment"),
        ("order", "0057_salesorderlineitem_shipped"),
        ("order", "0058_auto_20211126_1210"),
        ("order", "0059_salesordershipment_tracking_number"),
        ("order", "0060_auto_20211129_1339"),
        ("order", "0054_auto_20211201_2139"),
        ("order", "0061_merge_0054_auto_20211201_2139_0060_auto_20211129_1339"),
        ("order", "0062_auto_20220228_0321"),
        ("order", "0063_alter_purchaseorderlineitem_unique_together"),
        ("order", "0064_purchaseorderextraline_salesorderextraline"),
        ("order", "0065_alter_purchaseorderlineitem_part"),
        ("order", "0066_alter_purchaseorder_supplier"),
        ("order", "0067_auto_20220516_1120"),
        ("order", "0068_alter_salesorderallocation_unique_together"),
        ("order", "0069_auto_20220524_0508"),
        ("order", "0070_auto_20220620_0728"),
        ("order", "0071_auto_20220628_0133"),
        ("order", "0072_alter_salesorder_reference"),
        ("order", "0073_alter_purchaseorder_reference"),
        ("order", "0074_auto_20220709_0108"),
        ("order", "0075_auto_20221110_0108"),
        ("order", "0076_auto_20221111_0153"),
        ("order", "0077_auto_20230129_0154"),
        ("order", "0078_auto_20230304_0721"),
        ("order", "0079_auto_20230304_0904"),
        ("order", "0080_auto_20230317_0816"),
        ("order", "0081_auto_20230314_0725"),
        ("order", "0082_auto_20230314_1259"),
        ("order", "0083_returnorderextraline"),
        ("order", "0084_auto_20230321_1111"),
        ("order", "0085_auto_20230322_1056"),
        ("order", "0086_auto_20230323_1108"),
        ("order", "0087_alter_salesorder_status"),
        ("order", "0088_auto_20230403_1402"),
        ("order", "0089_auto_20230404_0030"),
        ("order", "0090_auto_20230412_1752"),
        ("order", "0091_auto_20230419_0037"),
        ("order", "0092_auto_20230419_0250"),
        ("order", "0093_auto_20230426_0248"),
        ("order", "0094_auto_20230514_2331"),
        ("order", "0095_salesordershipment_delivery_date"),
        ("order", "0096_alter_returnorderlineitem_outcome"),
    ]

    dependencies = [
        ("part", "0079_alter_part_notes"),
        ("stock", "0058_stockitem_packaging"),
        ("common", "0018_projectcode"),
        ("order", "0030_auto_20200426_0551"),
        ("stock", "0065_auto_20210701_0509"),
        ("stock", "0063_auto_20210511_2343"),
        ("company", "0023_auto_20200808_0715"),
        ("company", "0032_auto_20210403_1837"),
        ("stock", "0034_auto_20200426_0602"),
        ("users", "0005_owner_model"),
        ("stock", "0054_remove_stockitem_build_order"),
        ("part", "0035_auto_20200406_0045"),
        ("stock", "0095_stocklocation_external"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("company", "0042_supplierpricebreak_updated"),
        ("stock", "0077_alter_stockitem_notes"),
        ("company", "0040_alter_company_currency"),
        ("company", "0054_companyattachment"),
        ("users", "0006_alter_ruleset_name"),
        ("part", "0063_bomitem_inherited"),
    ]

    operations = [
        migrations.AlterField(
            model_name="salesorderallocation",
            name="item",
            field=models.ForeignKey(
                help_text="Select stock item to allocate",
                limit_choices_to={
                    "belongs_to": None,
                    "build_order": None,
                    "part__salable": True,
                    "sales_order": None,
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sales_order_allocations",
                to="stock.stockitem",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderattachment",
            name="comment",
            field=models.CharField(
                blank=True, help_text="File comment", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="salesorderattachment",
            name="comment",
            field=models.CharField(
                blank=True, help_text="File comment", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="complete_date",
            field=models.DateField(
                blank=True, help_text="Date order was completed", null=True
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="issue_date",
            field=models.DateField(
                blank=True, help_text="Date order was issued", null=True
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="supplier",
            field=models.ForeignKey(
                help_text="Company from which the items are being ordered",
                limit_choices_to={"is_supplier": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="company.company",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="customer",
            field=models.ForeignKey(
                help_text="Company to which the items are being sold",
                limit_choices_to={"is_customer": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sales_orders",
                to="company.company",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderallocation",
            name="item",
            field=models.ForeignKey(
                help_text="Select stock item to allocate",
                limit_choices_to={
                    "belongs_to": None,
                    "part__salable": True,
                    "sales_order": None,
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sales_order_allocations",
                to="stock.stockitem",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="target_date",
            field=models.DateField(
                blank=True,
                help_text="Expected date for order delivery. Order will be overdue after this date.",
                null=True,
                verbose_name="Target Date",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="target_date",
            field=models.DateField(
                blank=True,
                help_text="Expected date for order delivery. Order will be overdue after this date.",
                null=True,
                verbose_name="Target Date",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="complete_date",
            field=models.DateField(
                blank=True,
                help_text="Date order was completed",
                null=True,
                verbose_name="Completion Date",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="issue_date",
            field=models.DateField(
                blank=True,
                help_text="Date order was issued",
                null=True,
                verbose_name="Issue Date",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                help_text="User or group responsible for this order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="users.owner",
                verbose_name="Responsible",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                help_text="User or group responsible for this order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="users.owner",
                verbose_name="Responsible",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="salesorderlineitem",
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="creation_date",
            field=models.DateField(blank=True, null=True, verbose_name="Creation Date"),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="description",
            field=models.CharField(
                help_text="Order description",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="link",
            field=models.URLField(
                blank=True, help_text="Link to external page", verbose_name="Link"
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="notes",
            field=models.TextField(
                blank=True, help_text="Order notes", verbose_name="Notes"
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="received_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="received by",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="reference",
            field=models.CharField(
                help_text="Order reference",
                max_length=64,
                unique=True,
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="supplier",
            field=models.ForeignKey(
                help_text="Company from which the items are being ordered",
                limit_choices_to={"is_supplier": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="company.company",
                verbose_name="Supplier",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="supplier_reference",
            field=models.CharField(
                blank=True,
                help_text="Supplier order reference code",
                max_length=64,
                verbose_name="Supplier Reference",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="notes",
            field=models.CharField(
                blank=True,
                help_text="Line item notes",
                max_length=500,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="order",
            field=models.ForeignKey(
                help_text="Purchase Order",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lines",
                to="order.purchaseorder",
                verbose_name="Order",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="part",
            field=models.ForeignKey(
                blank=True,
                help_text="Supplier part",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="purchase_order_line_items",
                to="company.supplierpart",
                verbose_name="Part",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="quantity",
            field=InvenTree.fields.RoundingDecimalField(
                decimal_places=5,
                default=1,
                help_text="Item quantity",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Quantity",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="received",
            field=models.DecimalField(
                decimal_places=5,
                default=0,
                help_text="Number of items received",
                max_digits=15,
                verbose_name="Received",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="reference",
            field=models.CharField(
                blank=True,
                help_text="Line item reference",
                max_length=100,
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="creation_date",
            field=models.DateField(blank=True, null=True, verbose_name="Creation Date"),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="customer",
            field=models.ForeignKey(
                help_text="Company to which the items are being sold",
                limit_choices_to={"is_customer": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sales_orders",
                to="company.company",
                verbose_name="Customer",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="customer_reference",
            field=models.CharField(
                blank=True,
                help_text="Customer order reference code",
                max_length=64,
                verbose_name="Customer Reference ",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="description",
            field=models.CharField(
                help_text="Order description",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="link",
            field=models.URLField(
                blank=True, help_text="Link to external page", verbose_name="Link"
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="notes",
            field=models.TextField(
                blank=True, help_text="Order notes", verbose_name="Notes"
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="reference",
            field=models.CharField(
                help_text="Order reference",
                max_length=64,
                unique=True,
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="shipment_date",
            field=models.DateField(blank=True, null=True, verbose_name="Shipment Date"),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="shipped_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="shipped by",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "Pending"),
                    (20, "Shipped"),
                    (40, "Cancelled"),
                    (50, "Lost"),
                    (60, "Returned"),
                ],
                default=10,
                help_text="Purchase order status",
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderallocation",
            name="item",
            field=models.ForeignKey(
                help_text="Select stock item to allocate",
                limit_choices_to={
                    "belongs_to": None,
                    "part__salable": True,
                    "sales_order": None,
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sales_order_allocations",
                to="stock.stockitem",
                verbose_name="Item",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderallocation",
            name="line",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="order.salesorderlineitem",
                verbose_name="Line",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderallocation",
            name="quantity",
            field=InvenTree.fields.RoundingDecimalField(
                decimal_places=5,
                default=1,
                help_text="Enter stock allocation quantity",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Quantity",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderattachment",
            name="attachment",
            field=models.FileField(
                help_text="Select file to attach",
                upload_to=InvenTree.models.rename_attachment,
                verbose_name="Attachment",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderlineitem",
            name="order",
            field=models.ForeignKey(
                help_text="Sales Order",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lines",
                to="order.salesorder",
                verbose_name="Order",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderlineitem",
            name="part",
            field=models.ForeignKey(
                help_text="Part",
                limit_choices_to={"salable": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sales_order_line_items",
                to="part.part",
                verbose_name="Part",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderlineitem",
            name="quantity",
            field=InvenTree.fields.RoundingDecimalField(
                decimal_places=5,
                default=1,
                help_text="Item quantity",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Quantity",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderlineitem",
            name="reference",
            field=models.CharField(
                blank=True,
                help_text="Line item reference",
                max_length=100,
                verbose_name="Reference",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorderlineitem",
            name="purchase_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=4,
                default_currency="EUR",
                help_text="Unit purchase price",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Purchase Price",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorderlineitem",
            name="purchase_price_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[], default="", editable=False, max_length=3
            ),
        ),
        migrations.AddField(
            model_name="salesorderlineitem",
            name="sale_price_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[], default="", editable=False, max_length=3
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="reference",
            field=models.CharField(
                default="PO",
                help_text="Order reference",
                max_length=64,
                unique=True,
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="reference",
            field=models.CharField(
                default="SO",
                help_text="Order reference",
                max_length=64,
                unique=True,
                verbose_name="Reference",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="purchaseorderlineitem",
            unique_together={("order", "part", "quantity", "purchase_price")},
        ),
        migrations.AddField(
            model_name="purchaseorderlineitem",
            name="destination",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="Where does the Purchaser want this item to be stored?",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="po_lines",
                to="stock.stocklocation",
                verbose_name="Destination",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="reference_int",
            field=models.BigIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="purchaseorderattachment",
            name="attachment",
            field=models.FileField(
                help_text="Select file to attach",
                upload_to=InvenTree.models.rename_attachment,
                verbose_name="Attachment",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorderattachment",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True,
                help_text="Link to external URL",
                null=True,
                verbose_name="Link",
            ),
        ),
        migrations.AddField(
            model_name="salesorderattachment",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True,
                help_text="Link to external URL",
                null=True,
                verbose_name="Link",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderattachment",
            name="attachment",
            field=models.FileField(
                blank=True,
                help_text="Select file to attach",
                null=True,
                upload_to=InvenTree.models.rename_attachment,
                verbose_name="Attachment",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderattachment",
            name="attachment",
            field=models.FileField(
                blank=True,
                help_text="Select file to attach",
                null=True,
                upload_to=InvenTree.models.rename_attachment,
                verbose_name="Attachment",
            ),
        ),
        migrations.CreateModel(
            name="SalesOrderShipment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shipment_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of shipment",
                        null=True,
                        verbose_name="Shipment Date",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default="1",
                        help_text="Shipment number",
                        max_length=100,
                        verbose_name="Shipment",
                    ),
                ),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "checked_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who checked this shipment",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Checked By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Sales Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipments",
                        to="order.salesorder",
                        verbose_name="Order",
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        blank=True,
                        help_text="Shipment tracking information",
                        max_length=100,
                        verbose_name="Tracking Number",
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        blank=True,
                        help_text="Reference number for associated invoice",
                        max_length=100,
                        verbose_name="Invoice Number",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of delivery of shipment",
                        null=True,
                        verbose_name="Delivery Date",
                    ),
                ),
            ],
            options={
                "unique_together": {("order", "reference")},
            },
        ),
        migrations.AlterField(
            model_name="purchaseorderattachment",
            name="comment",
            field=models.CharField(
                blank=True,
                help_text="File comment",
                max_length=100,
                verbose_name="Comment",
            ),
        ),
        migrations.AddField(
            model_name="salesorderallocation",
            name="shipment",
            field=models.ForeignKey(
                help_text="Sales order shipment reference",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="order.salesordershipment",
                verbose_name="Shipment",
            ),
        ),
        migrations.AddField(
            model_name="salesorderlineitem",
            name="shipped",
            field=InvenTree.fields.RoundingDecimalField(
                decimal_places=5,
                default=0,
                help_text="Shipped quantity",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Shipped",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorderattachment",
            name="upload_date",
            field=models.DateField(
                auto_now_add=True, null=True, verbose_name="upload date"
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="reference_int",
            field=models.BigIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="purchaseorderlineitem",
            name="target_date",
            field=models.DateField(
                blank=True,
                help_text="Target shipping date for this line item",
                null=True,
                verbose_name="Target Date",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="purchaseorderlineitem",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="purchaseorderattachment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="part",
            field=models.ForeignKey(
                help_text="Supplier part",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="purchase_order_line_items",
                to="company.supplierpart",
                verbose_name="Part",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="supplier",
            field=models.ForeignKey(
                help_text="Company from which the items are being ordered",
                limit_choices_to={"is_supplier": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="purchase_orders",
                to="company.company",
                verbose_name="Supplier",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="salesorderallocation",
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Order notes",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Order notes",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderallocation",
            name="item",
            field=models.ForeignKey(
                help_text="Select stock item to allocate",
                limit_choices_to={
                    "belongs_to": None,
                    "part__salable": True,
                    "part__virtual": False,
                    "sales_order": None,
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sales_order_allocations",
                to="stock.stockitem",
                verbose_name="Item",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderlineitem",
            name="part",
            field=models.ForeignKey(
                help_text="Part",
                limit_choices_to={"salable": True, "virtual": False},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sales_order_line_items",
                to="part.part",
                verbose_name="Part",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="reference",
            field=models.CharField(
                default=order.validators.generate_next_sales_order_reference,
                help_text="Order reference",
                max_length=64,
                unique=True,
                validators=[order.validators.validate_sales_order_reference],
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="reference",
            field=models.CharField(
                default=order.validators.generate_next_purchase_order_reference,
                help_text="Order reference",
                max_length=64,
                unique=True,
                validators=[order.validators.validate_purchase_order_reference],
                verbose_name="Reference",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderattachment",
            name="comment",
            field=models.CharField(
                blank=True,
                help_text="File comment",
                max_length=100,
                verbose_name="Comment",
            ),
        ),
        migrations.AddField(
            model_name="salesorderattachment",
            name="upload_date",
            field=models.DateField(
                auto_now_add=True, null=True, verbose_name="upload date"
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True, help_text="Link to external page", verbose_name="Link"
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True, help_text="Link to external page", verbose_name="Link"
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="purchase_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=6,
                default_currency="EUR",
                help_text="Unit purchase price",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Purchase Price",
            ),
        ),
        migrations.AddField(
            model_name="salesorderlineitem",
            name="sale_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=6,
                default_currency="EUR",
                help_text="Unit sale price",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Sale Price",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="target_date",
            field=models.DateField(
                blank=True,
                help_text="Target date for this line item (leave blank to use the target date from the order)",
                null=True,
                verbose_name="Target Date",
            ),
        ),
        migrations.AddField(
            model_name="salesorderlineitem",
            name="target_date",
            field=models.DateField(
                blank=True,
                help_text="Target date for this line item (leave blank to use the target date from the order)",
                null=True,
                verbose_name="Target Date",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="total_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=6,
                default_currency="EUR",
                help_text="Total price for this order",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Total Price",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="total_price_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[], default="", editable=False, max_length=3
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="total_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=6,
                default_currency="EUR",
                help_text="Total price for this order",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Total Price",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="total_price_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[], default="", editable=False, max_length=3
            ),
        ),
        migrations.AddField(
            model_name="salesorderattachment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderlineitem",
            name="notes",
            field=models.CharField(
                blank=True,
                help_text="Line item notes",
                max_length=500,
                verbose_name="Notes",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorderlineitem",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="salesorderlineitem",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.CreateModel(
            name="ReturnOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                ("reference_int", models.BigIntegerField(default=0)),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Order description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=order.validators.generate_next_return_order_reference,
                        help_text="Return Order reference",
                        max_length=64,
                        unique=True,
                        validators=[order.validators.validate_return_order_reference],
                        verbose_name="Reference",
                    ),
                ),
                (
                    "status",
                    models.PositiveIntegerField(
                        choices=[
                            (10, "Pending"),
                            (20, "In Progress"),
                            (30, "Complete"),
                            (40, "Cancelled"),
                        ],
                        default=10,
                        help_text="Return order status",
                        verbose_name="Status",
                    ),
                ),
                (
                    "customer_reference",
                    models.CharField(
                        blank=True,
                        help_text="Customer order reference code",
                        max_length=64,
                        verbose_name="Customer Reference ",
                    ),
                ),
                (
                    "issue_date",
                    models.DateField(
                        blank=True,
                        help_text="Date order was issued",
                        null=True,
                        verbose_name="Issue Date",
                    ),
                ),
                (
                    "complete_date",
                    models.DateField(
                        blank=True,
                        help_text="Date order was completed",
                        null=True,
                        verbose_name="Completion Date",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Company from which items are being returned",
                        limit_choices_to={"is_customer": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sales_orders",
                        to="company.company",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "responsible",
                    models.ForeignKey(
                        blank=True,
                        help_text="User or group responsible for this order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="users.owner",
                        verbose_name="Responsible",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        help_text="Point of contact for this order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="company.contact",
                        verbose_name="Contact",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Expected date for order delivery. Order will be overdue after this date.",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "total_price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        decimal_places=6,
                        default_currency="EUR",
                        help_text="Total price for this order",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Total Price",
                    ),
                ),
                (
                    "total_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "project_code",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select project code for this order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.projectcode",
                        verbose_name="Project Code",
                    ),
                ),
                (
                    "order_currency",
                    models.CharField(
                        blank=True,
                        help_text="Currency for this order (leave blank to use company default)",
                        max_length=3,
                        null=True,
                        validators=[InvenTree.validators.validate_currency_code],
                        verbose_name="Order Currency",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="customer",
            field=models.ForeignKey(
                help_text="Company to which the items are being sold",
                limit_choices_to={"is_customer": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="return_orders",
                to="company.company",
                verbose_name="Customer",
            ),
        ),
        migrations.CreateModel(
            name="ReturnOrderAttachment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        help_text="Select file to attach",
                        null=True,
                        upload_to=InvenTree.models.rename_attachment,
                        verbose_name="Attachment",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external URL",
                        null=True,
                        verbose_name="Link",
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="File comment",
                        max_length=100,
                        verbose_name="Comment",
                    ),
                ),
                (
                    "upload_date",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="upload date"
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="order.returnorder",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="contact",
            field=models.ForeignKey(
                blank=True,
                help_text="Point of contact for this order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="company.contact",
                verbose_name="Contact",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="contact",
            field=models.ForeignKey(
                blank=True,
                help_text="Point of contact for this order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="company.contact",
                verbose_name="Contact",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "Pending"),
                    (15, "In Progress"),
                    (20, "Shipped"),
                    (40, "Cancelled"),
                    (50, "Lost"),
                    (60, "Returned"),
                ],
                default=10,
                help_text="Purchase order status",
                verbose_name="Status",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorderlineitem",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True, help_text="Link to external page", verbose_name="Link"
            ),
        ),
        migrations.AddField(
            model_name="salesorderlineitem",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True, help_text="Link to external page", verbose_name="Link"
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Order description (optional)",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Order description (optional)",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Markdown notes (optional)",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Markdown notes (optional)",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="project_code",
            field=models.ForeignKey(
                blank=True,
                help_text="Select project code for this order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="common.projectcode",
                verbose_name="Project Code",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="project_code",
            field=models.ForeignKey(
                blank=True,
                help_text="Select project code for this order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="common.projectcode",
                verbose_name="Project Code",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="order_currency",
            field=models.CharField(
                blank=True,
                help_text="Currency for this order (leave blank to use company default)",
                max_length=3,
                null=True,
                validators=[InvenTree.validators.validate_currency_code],
                verbose_name="Order Currency",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="order_currency",
            field=models.CharField(
                blank=True,
                help_text="Currency for this order (leave blank to use company default)",
                max_length=3,
                null=True,
                validators=[InvenTree.validators.validate_currency_code],
                verbose_name="Order Currency",
            ),
        ),
        migrations.CreateModel(
            name="PurchaseOrderExtraLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for this line",
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        decimal_places=6,
                        default_currency="EUR",
                        help_text="Unit price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Purchase Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extra_lines",
                        to="order.purchaseorder",
                        verbose_name="Order",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Line item description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReturnOrderExtraLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for this line",
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        decimal_places=6,
                        default_currency="EUR",
                        help_text="Unit price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Return Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extra_lines",
                        to="order.returnorder",
                        verbose_name="Order",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Line item description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SalesOrderExtraLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for this line",
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        decimal_places=6,
                        default_currency="EUR",
                        help_text="Unit price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Sales Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extra_lines",
                        to="order.salesorder",
                        verbose_name="Order",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Line item description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReturnOrderLineItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "received_date",
                    models.DateField(
                        blank=True,
                        help_text="The date this this return item was received",
                        null=True,
                        verbose_name="Received Date",
                    ),
                ),
                (
                    "outcome",
                    models.PositiveIntegerField(
                        choices=[
                            (10, "Pending"),
                            (20, "Return"),
                            (30, "Repair"),
                            (40, "Replace"),
                            (50, "Refund"),
                            (60, "Reject"),
                        ],
                        default=10,
                        help_text="Outcome for this line item",
                        verbose_name="Outcome",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        decimal_places=6,
                        default_currency="EUR",
                        help_text="Cost associated with return or repair for this line item",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        help_text="Select item to return from customer",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="return_order_lines",
                        to="stock.stockitem",
                        verbose_name="Item",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Return Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="order.returnorder",
                        verbose_name="Order",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
            ],
            options={
                "unique_together": {("order", "item")},
            },
        ),
    ]
