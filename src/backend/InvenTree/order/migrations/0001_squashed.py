# Generated by Django 4.2.17 on 2025-01-05 12:47

import InvenTree.fields
import InvenTree.models
import InvenTree.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import generic.states.fields
import generic.states.states
import generic.states.transition
import generic.states.validators
import order.status_codes
import order.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                ("reference_int", models.BigIntegerField(default=0)),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "total_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "total_price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Total price for this order",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Total Price",
                    ),
                ),
                (
                    "order_currency",
                    models.CharField(
                        blank=True,
                        help_text="Currency for this order (leave blank to use company default)",
                        max_length=3,
                        null=True,
                        validators=[InvenTree.validators.validate_currency_code],
                        verbose_name="Order Currency",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Order description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Expected date for order delivery. Order will be overdue after this date.",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=order.validators.generate_next_purchase_order_reference,
                        help_text="Order reference",
                        max_length=64,
                        unique=True,
                        validators=[order.validators.validate_purchase_order_reference],
                        verbose_name="Reference",
                    ),
                ),
                (
                    "status",
                    generic.states.fields.InvenTreeCustomStatusModelField(
                        choices=[
                            (10, "Pending"),
                            (20, "Placed"),
                            (25, "On Hold"),
                            (30, "Complete"),
                            (40, "Cancelled"),
                            (50, "Lost"),
                            (60, "Returned"),
                        ],
                        default=10,
                        help_text="Purchase order status",
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.PurchaseOrderStatus
                            )
                        ],
                        verbose_name="Status",
                    ),
                ),
                (
                    "supplier_reference",
                    models.CharField(
                        blank=True,
                        help_text="Supplier order reference code",
                        max_length=64,
                        verbose_name="Supplier Reference",
                    ),
                ),
                (
                    "issue_date",
                    models.DateField(
                        blank=True,
                        help_text="Date order was issued",
                        null=True,
                        verbose_name="Issue Date",
                    ),
                ),
                (
                    "complete_date",
                    models.DateField(
                        blank=True,
                        help_text="Date order was completed",
                        null=True,
                        verbose_name="Completion Date",
                    ),
                ),
                (
                    "status_custom_key",
                    generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                        blank=True,
                        default=None,
                        help_text="Additional status information for this item",
                        null=True,
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.PurchaseOrderStatus
                            )
                        ],
                        verbose_name="Custom status key",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order",
            },
            bases=(
                generic.states.states.StatusCodeMixin,
                generic.states.transition.StateTransitionMixin,
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="PurchaseOrderExtraLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Line item description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for this line",
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Unit price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order Extra Line",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PurchaseOrderLineItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "received",
                    models.DecimalField(
                        decimal_places=5,
                        default=0,
                        help_text="Number of items received",
                        max_digits=15,
                        verbose_name="Received",
                    ),
                ),
                (
                    "purchase_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "purchase_price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Unit purchase price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Purchase Price",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order Line Item",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ReturnOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                ("reference_int", models.BigIntegerField(default=0)),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "total_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "total_price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Total price for this order",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Total Price",
                    ),
                ),
                (
                    "order_currency",
                    models.CharField(
                        blank=True,
                        help_text="Currency for this order (leave blank to use company default)",
                        max_length=3,
                        null=True,
                        validators=[InvenTree.validators.validate_currency_code],
                        verbose_name="Order Currency",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Order description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Expected date for order delivery. Order will be overdue after this date.",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=order.validators.generate_next_return_order_reference,
                        help_text="Return Order reference",
                        max_length=64,
                        unique=True,
                        validators=[order.validators.validate_return_order_reference],
                        verbose_name="Reference",
                    ),
                ),
                (
                    "status",
                    generic.states.fields.InvenTreeCustomStatusModelField(
                        choices=[
                            (10, "Pending"),
                            (20, "In Progress"),
                            (25, "On Hold"),
                            (30, "Complete"),
                            (40, "Cancelled"),
                        ],
                        default=10,
                        help_text="Return order status",
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.ReturnOrderStatus
                            )
                        ],
                        verbose_name="Status",
                    ),
                ),
                (
                    "customer_reference",
                    models.CharField(
                        blank=True,
                        help_text="Customer order reference code",
                        max_length=64,
                        verbose_name="Customer Reference ",
                    ),
                ),
                (
                    "issue_date",
                    models.DateField(
                        blank=True,
                        help_text="Date order was issued",
                        null=True,
                        verbose_name="Issue Date",
                    ),
                ),
                (
                    "complete_date",
                    models.DateField(
                        blank=True,
                        help_text="Date order was completed",
                        null=True,
                        verbose_name="Completion Date",
                    ),
                ),
                (
                    "status_custom_key",
                    generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                        blank=True,
                        default=None,
                        help_text="Additional status information for this item",
                        null=True,
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.ReturnOrderStatus
                            )
                        ],
                        verbose_name="Custom status key",
                    ),
                ),
            ],
            options={
                "verbose_name": "Return Order",
            },
            bases=(
                generic.states.states.StatusCodeMixin,
                generic.states.transition.StateTransitionMixin,
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="ReturnOrderExtraLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Line item description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for this line",
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Unit price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
            ],
            options={
                "verbose_name": "Return Order Extra Line",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ReturnOrderLineItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Quantity to return",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "received_date",
                    models.DateField(
                        blank=True,
                        help_text="The date this this return item was received",
                        null=True,
                        verbose_name="Received Date",
                    ),
                ),
                (
                    "outcome",
                    generic.states.fields.InvenTreeCustomStatusModelField(
                        choices=[
                            (10, "Pending"),
                            (20, "Return"),
                            (30, "Repair"),
                            (40, "Replace"),
                            (50, "Refund"),
                            (60, "Reject"),
                        ],
                        default=10,
                        help_text="Outcome for this line item",
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.ReturnOrderLineStatus
                            )
                        ],
                        verbose_name="Outcome",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Cost associated with return or repair for this line item",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "outcome_custom_key",
                    generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                        blank=True,
                        default=None,
                        help_text="Additional status information for this item",
                        null=True,
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.ReturnOrderLineStatus
                            )
                        ],
                        verbose_name="Custom status key",
                    ),
                ),
            ],
            options={
                "verbose_name": "Return Order Line Item",
            },
            bases=(
                generic.states.states.StatusCodeMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="SalesOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                ("reference_int", models.BigIntegerField(default=0)),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "barcode_data",
                    models.CharField(
                        blank=True,
                        help_text="Third party barcode data",
                        max_length=500,
                        verbose_name="Barcode Data",
                    ),
                ),
                (
                    "barcode_hash",
                    models.CharField(
                        blank=True,
                        help_text="Unique hash of barcode data",
                        max_length=128,
                        verbose_name="Barcode Hash",
                    ),
                ),
                (
                    "total_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "total_price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Total price for this order",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Total Price",
                    ),
                ),
                (
                    "order_currency",
                    models.CharField(
                        blank=True,
                        help_text="Currency for this order (leave blank to use company default)",
                        max_length=3,
                        null=True,
                        validators=[InvenTree.validators.validate_currency_code],
                        verbose_name="Order Currency",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Order description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Expected date for order delivery. Order will be overdue after this date.",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=order.validators.generate_next_sales_order_reference,
                        help_text="Order reference",
                        max_length=64,
                        unique=True,
                        validators=[order.validators.validate_sales_order_reference],
                        verbose_name="Reference",
                    ),
                ),
                (
                    "status",
                    generic.states.fields.InvenTreeCustomStatusModelField(
                        choices=[
                            (10, "Pending"),
                            (15, "In Progress"),
                            (20, "Shipped"),
                            (25, "On Hold"),
                            (30, "Complete"),
                            (40, "Cancelled"),
                            (50, "Lost"),
                            (60, "Returned"),
                        ],
                        default=10,
                        help_text="Sales order status",
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.SalesOrderStatus
                            )
                        ],
                        verbose_name="Status",
                    ),
                ),
                (
                    "customer_reference",
                    models.CharField(
                        blank=True,
                        help_text="Customer order reference code",
                        max_length=64,
                        verbose_name="Customer Reference ",
                    ),
                ),
                (
                    "shipment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Shipment Date"
                    ),
                ),
                (
                    "status_custom_key",
                    generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                        blank=True,
                        default=None,
                        help_text="Additional status information for this item",
                        null=True,
                        validators=[
                            generic.states.validators.CustomStatusCodeValidator(
                                status_class=order.status_codes.SalesOrderStatus
                            )
                        ],
                        verbose_name="Custom status key",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Order",
            },
            bases=(
                generic.states.states.StatusCodeMixin,
                generic.states.transition.StateTransitionMixin,
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="SalesOrderAllocation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Enter stock allocation quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Order Allocation",
            },
        ),
        migrations.CreateModel(
            name="SalesOrderExtraLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Line item description (optional)",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for this line",
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Unit price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Price",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Order Extra Line",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SalesOrderShipment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "notes",
                    InvenTree.fields.InvenTreeNotesField(
                        blank=True,
                        help_text="Markdown notes (optional)",
                        max_length=50000,
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "shipment_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of shipment",
                        null=True,
                        verbose_name="Shipment Date",
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of delivery of shipment",
                        null=True,
                        verbose_name="Delivery Date",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default="1",
                        help_text="Shipment number",
                        max_length=100,
                        verbose_name="Shipment",
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        blank=True,
                        help_text="Shipment tracking information",
                        max_length=100,
                        verbose_name="Tracking Number",
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        blank=True,
                        help_text="Reference number for associated invoice",
                        max_length=100,
                        verbose_name="Invoice Number",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "checked_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who checked this shipment",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Checked By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Sales Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipments",
                        to="order.salesorder",
                        verbose_name="Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Order Shipment",
            },
            bases=(
                InvenTree.models.InvenTreeAttachmentMixin,
                InvenTree.models.PluginValidationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="SalesOrderLineItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "quantity",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Item quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Line item reference",
                        max_length=100,
                        verbose_name="Reference",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Line item notes",
                        max_length=500,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "link",
                    InvenTree.fields.InvenTreeURLField(
                        blank=True,
                        help_text="Link to external page",
                        verbose_name="Link",
                    ),
                ),
                (
                    "target_date",
                    models.DateField(
                        blank=True,
                        help_text="Target date for this line item (leave blank to use the target date from the order)",
                        null=True,
                        verbose_name="Target Date",
                    ),
                ),
                (
                    "sale_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3, null=True
                    ),
                ),
                (
                    "sale_price",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Unit sale price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Sale Price",
                    ),
                ),
                (
                    "shipped",
                    InvenTree.fields.RoundingDecimalField(
                        decimal_places=5,
                        default=0,
                        help_text="Shipped quantity",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Shipped",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Sales Order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="order.salesorder",
                        verbose_name="Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Order Line Item",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
    ]
