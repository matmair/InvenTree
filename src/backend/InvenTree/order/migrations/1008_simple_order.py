# Generated by Django 4.2.17 on 2025-01-05 01:32

import django.core.validators
import django.db.migrations.operations.special
import django.db.models.deletion
import generic.states.fields
import generic.states.validators
import mptt.fields
from django.db import migrations, models

import order.status_codes


def update_shipment_date(apps, schema_editor):
    """
    Update the shipment date for existing SalesOrderAllocation objects
    """

    from order.status_codes import SalesOrderStatusGroups

    SalesOrder = apps.get_model("order", "SalesOrder")

    # Find any orders which are "complete" but missing a shipment date
    orders = SalesOrder.objects.filter(
        status__in=SalesOrderStatusGroups.COMPLETE, shipment_date__isnull=True
    )

    updated_orders = 0

    for order in orders:
        # Find the latest shipment date for any associated allocations
        shipments = order.shipments.filter(shipment_date__isnull=False)
        latest_shipment = shipments.order_by("-shipment_date").first()

        if not latest_shipment:
            continue

        # Update the order with the new shipment date
        order.shipment_date = latest_shipment.shipment_date
        order.save()

        updated_orders += 1

    if updated_orders > 0:
        print(f"Updated {updated_orders} SalesOrder objects with missing shipment_date")


class Migration(migrations.Migration):
    replaces = [
        ("order", "0100_remove_returnorderattachment_order_and_more"),
        ("order", "0101_purchaseorder_status_custom_key_and_more"),
        ("order", "0102_purchaseorder_destination_and_more"),
        ("order", "0103_alter_salesorderallocation_shipment"),
        ("order", "0104_alter_returnorderlineitem_quantity"),
        ("order", "0105_auto_20241128_0431"),
    ]

    dependencies = [
        ("common", "0026_auto_20240608_1238"),
        ("company", "0069_company_active"),
        ("build", "0050_auto_20240508_0138"),
        ("stock", "0110_alter_stockitemtestresult_finished_datetime_and_more"),
        ("order", "0099_alter_salesorder_status"),
        ("stock", "0113_stockitem_status_custom_key_and_more"),
        ("part", "0123_parttesttemplate_choices"),
    ]

    operations = [
        migrations.DeleteModel(
            name="PurchaseOrderAttachment",
        ),
        migrations.DeleteModel(
            name="ReturnOrderAttachment",
        ),
        migrations.DeleteModel(
            name="SalesOrderAttachment",
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="status_custom_key",
            field=generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                blank=True,
                default=None,
                help_text="Additional status information for this item",
                null=True,
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.PurchaseOrderStatus
                    )
                ],
                verbose_name="Custom status key",
            ),
        ),
        migrations.AddField(
            model_name="returnorder",
            name="status_custom_key",
            field=generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                blank=True,
                default=None,
                help_text="Additional status information for this item",
                null=True,
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.ReturnOrderStatus
                    )
                ],
                verbose_name="Custom status key",
            ),
        ),
        migrations.AddField(
            model_name="returnorderlineitem",
            name="outcome_custom_key",
            field=generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                blank=True,
                default=None,
                help_text="Additional status information for this item",
                null=True,
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.ReturnOrderLineStatus
                    )
                ],
                verbose_name="Custom status key",
            ),
        ),
        migrations.AddField(
            model_name="salesorder",
            name="status_custom_key",
            field=generic.states.fields.ExtraInvenTreeCustomStatusModelField(
                blank=True,
                default=None,
                help_text="Additional status information for this item",
                null=True,
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.SalesOrderStatus
                    )
                ],
                verbose_name="Custom status key",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="status",
            field=generic.states.fields.InvenTreeCustomStatusModelField(
                choices=[
                    (10, "Pending"),
                    (20, "Placed"),
                    (25, "On Hold"),
                    (30, "Complete"),
                    (40, "Cancelled"),
                    (50, "Lost"),
                    (60, "Returned"),
                ],
                default=10,
                help_text="Purchase order status",
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.PurchaseOrderStatus
                    )
                ],
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="returnorder",
            name="status",
            field=generic.states.fields.InvenTreeCustomStatusModelField(
                choices=[
                    (10, "Pending"),
                    (20, "In Progress"),
                    (25, "On Hold"),
                    (30, "Complete"),
                    (40, "Cancelled"),
                ],
                default=10,
                help_text="Return order status",
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.ReturnOrderStatus
                    )
                ],
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="returnorderlineitem",
            name="outcome",
            field=generic.states.fields.InvenTreeCustomStatusModelField(
                choices=[
                    (10, "Pending"),
                    (20, "Return"),
                    (30, "Repair"),
                    (40, "Replace"),
                    (50, "Refund"),
                    (60, "Reject"),
                ],
                default=10,
                help_text="Outcome for this line item",
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.ReturnOrderLineStatus
                    )
                ],
                verbose_name="Outcome",
            ),
        ),
        migrations.AlterField(
            model_name="salesorder",
            name="status",
            field=generic.states.fields.InvenTreeCustomStatusModelField(
                choices=[
                    (10, "Pending"),
                    (15, "In Progress"),
                    (20, "Shipped"),
                    (25, "On Hold"),
                    (30, "Complete"),
                    (40, "Cancelled"),
                    (50, "Lost"),
                    (60, "Returned"),
                ],
                default=10,
                help_text="Sales order status",
                validators=[
                    generic.states.validators.CustomStatusCodeValidator(
                        status_class=order.status_codes.SalesOrderStatus
                    )
                ],
                verbose_name="Status",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="destination",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="Destination for received items",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="purchase_orders",
                to="stock.stocklocation",
                verbose_name="Destination",
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorderlineitem",
            name="destination",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="Destination for received items",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="po_lines",
                to="stock.stocklocation",
                verbose_name="Destination",
            ),
        ),
        migrations.AlterField(
            model_name="salesorderallocation",
            name="shipment",
            field=models.ForeignKey(
                blank=True,
                help_text="Sales order shipment reference",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocations",
                to="order.salesordershipment",
                verbose_name="Shipment",
            ),
        ),
        migrations.AlterField(
            model_name="returnorderlineitem",
            name="quantity",
            field=models.DecimalField(
                decimal_places=5,
                default=1,
                help_text="Quantity to return",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Quantity",
            ),
        ),
        migrations.RunPython(
            code=update_shipment_date,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterModelOptions(
            name="purchaseorder",
            options={"verbose_name": "Purchase Order"},
        ),
        migrations.AlterModelOptions(
            name="purchaseorderlineitem",
            options={"verbose_name": "Purchase Order Line Item"},
        ),
        migrations.AlterModelOptions(
            name="salesorder",
            options={"verbose_name": "Sales Order"},
        ),
        migrations.AlterModelOptions(
            name="salesorderlineitem",
            options={"verbose_name": "Sales Order Line Item"},
        ),
    ]
