# Generated by Django 4.2.17 on 2025-01-05 12:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    replaces = [('common', '0001_initial'), ('common', '0002_auto_20190902_2304'), ('common', '0003_auto_20190902_2310'), ('common', '0004_inventreesetting'), ('common', '0005_auto_20190915_1256'), ('common', '0006_auto_20200203_0951'), ('common', '0007_colortheme'), ('common', '0008_remove_inventreesetting_description'), ('common', '0009_delete_currency'), ('common', '0010_migrate_currency_setting'), ('common', '0011_auto_20210722_2114'), ('common', '0012_notificationentry'), ('common', '0013_webhookendpoint_webhookmessage'), ('common', '0014_notificationmessage'), ('common', '0015_newsfeedentry'), ('common', '0016_alter_notificationentry_updated'), ('common', '0017_notesimage'), ('common', '0018_projectcode'), ('common', '0019_projectcode_metadata'), ('common', '0020_customunit'), ('common', '0021_auto_20230805_1748'), ('common', '0022_projectcode_responsible'), ('common', '0023_auto_20240602_1332'), ('common', '0024_notesimage_model_id_notesimage_model_type'), ('common', '0025_attachment'), ('common', '0026_auto_20240608_1238'), ('common', '0027_alter_customunit_symbol'), ('common', '0028_colortheme_user_obj'), ('common', '0029_inventreecustomuserstatemodel'), ('common', '0030_barcodescanresult'), ('common', '0031_auto_20241026_0024'), ('common', '0032_selectionlist_selectionlistentry_and_more'), ('common', '0033_delete_colortheme'), ('common', '0034_alter_inventreecustomuserstatemodel_unique_together_and_more')]

    dependencies = [
        ("users", "0001_squashed"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("common", "0002_attachment_barcodescanresult_customunit_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="projectcode",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                help_text="User or group responsible for this project",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="project_codes",
                to="users.owner",
                verbose_name="Responsible",
            ),
        ),
        migrations.AddField(
            model_name="notificationmessage",
            name="source_content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="notification_source",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="notificationmessage",
            name="target_content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notification_target",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="notificationmessage",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationentry",
            unique_together={("key", "uid")},
        ),
        migrations.AddField(
            model_name="notesimage",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="inventreeusersetting",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="inventreecustomuserstatemodel",
            name="model",
            field=models.ForeignKey(
                blank=True,
                help_text="Model this state is associated with",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="contenttypes.contenttype",
                verbose_name="Model",
            ),
        ),
        migrations.AddField(
            model_name="barcodescanresult",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who scanned the barcode",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="upload_user",
            field=models.ForeignKey(
                blank=True,
                help_text="User",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="selectionlistentry",
            unique_together={("list", "value")},
        ),
        migrations.AddConstraint(
            model_name="inventreeusersetting",
            constraint=models.UniqueConstraint(
                fields=("key", "user"), name="unique key and user"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventreecustomuserstatemodel",
            unique_together={("reference_status", "key"), ("reference_status", "name")},
        ),
    ]
