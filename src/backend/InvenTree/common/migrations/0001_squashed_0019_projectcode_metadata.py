# Generated by Django 4.2 on 2023-06-11 00:26

import common.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    replaces = [
        ("common", "0001_initial"),
        ("common", "0002_auto_20190902_2304"),
        ("common", "0003_auto_20190902_2310"),
        ("common", "0004_inventreesetting"),
        ("common", "0005_auto_20190915_1256"),
        ("common", "0006_auto_20200203_0951"),
        ("common", "0007_colortheme"),
        ("common", "0008_remove_inventreesetting_description"),
        ("common", "0009_delete_currency"),
        ("common", "0010_migrate_currency_setting"),
        ("common", "0011_auto_20210722_2114"),
        ("common", "0012_notificationentry"),
        ("common", "0013_webhookendpoint_webhookmessage"),
        ("common", "0014_notificationmessage"),
        ("common", "0015_newsfeedentry"),
        ("common", "0016_alter_notificationentry_updated"),
        ("common", "0017_notesimage"),
        ("common", "0018_projectcode"),
        ("common", "0019_projectcode_metadata"),
    ]

    initial = True

    dependencies = [
        ("company", "0027_remove_supplierpricebreak_currency"),
        ("part", "0057_remove_partsellpricebreak_currency"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="InvenTreeSetting",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="Settings key (must be unique - case insensitive",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True, help_text="Settings value", max_length=200
                    ),
                ),
            ],
            options={
                "verbose_name": "InvenTree Setting",
                "verbose_name_plural": "InvenTree Settings",
            },
        ),
        migrations.CreateModel(
            name="ColorTheme",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=20)),
                ("user", models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="InvenTreeUserSetting",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True, help_text="Settings value", max_length=200
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="Settings key (must be unique - case insensitive",
                        max_length=50,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "InvenTree User Setting",
                "verbose_name_plural": "InvenTree User Settings",
            },
        ),
        migrations.AddConstraint(
            model_name="inventreeusersetting",
            constraint=models.UniqueConstraint(
                fields=("key", "user"), name="unique key and user"
            ),
        ),
        migrations.CreateModel(
            name="WebhookEndpoint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "endpoint_id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Endpoint at which this webhook is received",
                        max_length=255,
                        verbose_name="Endpoint",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name for this webhook",
                        max_length=255,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this webhook active",
                        verbose_name="Active",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        blank=True,
                        default=uuid.uuid4,
                        help_text="Token for access",
                        max_length=255,
                        null=True,
                        verbose_name="Token",
                    ),
                ),
                (
                    "secret",
                    models.CharField(
                        blank=True,
                        help_text="Shared secret for HMAC",
                        max_length=255,
                        null=True,
                        verbose_name="Secret",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WebhookMessage",
            fields=[
                (
                    "message_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this message",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Message ID",
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        editable=False,
                        help_text="Host from which this message was received",
                        max_length=255,
                        verbose_name="Host",
                    ),
                ),
                (
                    "header",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Header of this message",
                        max_length=255,
                        null=True,
                        verbose_name="Header",
                    ),
                ),
                (
                    "body",
                    models.JSONField(
                        blank=True,
                        editable=False,
                        help_text="Body of this message",
                        null=True,
                        verbose_name="Body",
                    ),
                ),
                (
                    "worked_on",
                    models.BooleanField(
                        default=False,
                        help_text="Was the work on this message finished?",
                        verbose_name="Worked on",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        blank=True,
                        help_text="Endpoint on which this message was received",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.webhookendpoint",
                        verbose_name="Endpoint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationMessage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("target_object_id", models.PositiveIntegerField()),
                (
                    "source_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("category", models.CharField(max_length=250)),
                ("name", models.CharField(max_length=250)),
                ("message", models.CharField(blank=True, max_length=250, null=True)),
                ("creation", models.DateTimeField(auto_now_add=True)),
                ("read", models.BooleanField(default=False)),
                (
                    "source_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notification_source",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "target_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_target",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewsFeedEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feed_id",
                    models.CharField(max_length=250, unique=True, verbose_name="Id"),
                ),
                ("title", models.CharField(max_length=250, verbose_name="Title")),
                ("link", models.URLField(max_length=250, verbose_name="Link")),
                (
                    "published",
                    models.DateTimeField(max_length=250, verbose_name="Published"),
                ),
                ("author", models.CharField(max_length=250, verbose_name="Author")),
                ("summary", models.CharField(max_length=250, verbose_name="Summary")),
                (
                    "read",
                    models.BooleanField(
                        default=False,
                        help_text="Was this news item read?",
                        verbose_name="Read",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=250)),
                ("uid", models.IntegerField()),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of last update",
                        null=True,
                        verbose_name="Updated",
                    ),
                ),
            ],
            options={
                "unique_together": {("key", "uid")},
            },
        ),
        migrations.CreateModel(
            name="NotesImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Image file",
                        upload_to=common.models.rename_notes_image,
                        verbose_name="Image",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique project code",
                        max_length=50,
                        unique=True,
                        verbose_name="Project Code",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Project description",
                        max_length=200,
                        verbose_name="Description",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
            ],
        ),
    ]
