# Generated by Django 4.2 on 2023-06-11 01:54

import InvenTree.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ("stock", "0001_initial"),
        ("stock", "0002_auto_20190525_2226"),
        ("stock", "0003_auto_20190525_2303"),
        ("stock", "0004_auto_20190525_2356"),
        ("stock", "0005_auto_20190602_1944"),
        ("stock", "0006_stockitem_purchase_order"),
        ("stock", "0007_auto_20190618_0042"),
        ("stock", "0008_stockitemtracking_url"),
        ("stock", "0009_auto_20190715_2351"),
    ]

    dependencies = [
        ("order", "0010_purchaseorderlineitem_notes"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("company", "0001_initial"),
        ("part", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="StockLocation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        validators=[InvenTree.validators.validate_tree_name],
                    ),
                ),
                ("description", models.CharField(max_length=250)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="children",
                        to="stock.stocklocation",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("name", "parent")},
            },
        ),
        migrations.CreateModel(
            name="StockItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "serial",
                    models.PositiveIntegerField(
                        blank=True, help_text="Serial number for this item", null=True
                    ),
                ),
                ("URL", models.URLField(blank=True, max_length=125)),
                (
                    "batch",
                    models.CharField(
                        blank=True,
                        help_text="Batch code for this stock item",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("updated", models.DateField(auto_now=True, null=True)),
                ("stocktake_date", models.DateField(blank=True, null=True)),
                ("review_needed", models.BooleanField(default=False)),
                (
                    "delete_on_deplete",
                    models.BooleanField(
                        default=True,
                        help_text="Delete this Stock Item when stock is depleted",
                    ),
                ),
                (
                    "status",
                    models.PositiveIntegerField(
                        choices=[
                            (10, "OK"),
                            (50, "Attention needed"),
                            (55, "Damaged"),
                            (60, "Destroyed"),
                            (70, "Lost"),
                        ],
                        default=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True, help_text="Stock Item Notes", max_length=250
                    ),
                ),
                ("infinite", models.BooleanField(default=False)),
                (
                    "belongs_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Is this item installed in another item?",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="owned_parts",
                        to="stock.stockitem",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        help_text="Item assigned to customer?",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stockitems",
                        to="company.company",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        help_text="Where is this stock item located?",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="stock_items",
                        to="stock.stocklocation",
                    ),
                ),
                (
                    "part",
                    models.ForeignKey(
                        help_text="Base part",
                        limit_choices_to={"active": True, "is_template": False},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_items",
                        to="part.part",
                    ),
                ),
                (
                    "stocktake_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stocktake_stock",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier_part",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select a matching supplier part for this stock item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="company.supplierpart",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        blank=True,
                        help_text="Purchase order for this stock item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_items",
                        to="order.purchaseorder",
                    ),
                ),
            ],
            options={
                "unique_together": {("part", "serial")},
            },
        ),
        migrations.CreateModel(
            name="StockItemTracking",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "title",
                    models.CharField(help_text="Tracking entry title", max_length=250),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True, help_text="Entry notes", max_length=512
                    ),
                ),
                ("system", models.BooleanField(default=False)),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_info",
                        to="stock.stockitem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "URL",
                    models.URLField(
                        blank=True,
                        help_text="Link to external page for further information",
                    ),
                ),
            ],
        ),
    ]
