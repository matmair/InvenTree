# Generated by Django 4.2 on 2023-06-11 02:03

import InvenTree.fields
import InvenTree.models
import InvenTree.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import mptt.fields
import stock.models
import taggit.managers


class Migration(migrations.Migration):

    replaces = [
        ("stock", "0059_auto_20210404_2016"),
        ("stock", "0060_auto_20210511_1713"),
        ("stock", "0061_auto_20210511_0911"),
        ("stock", "0062_auto_20210511_2151"),
        ("stock", "0063_auto_20210511_2343"),
        ("stock", "0064_auto_20210621_1724"),
        ("stock", "0065_auto_20210701_0509"),
        ("stock", "0066_stockitem_scheduled_for_deletion"),
        ("stock", "0067_alter_stockitem_part"),
        ("stock", "0068_stockitem_serial_int"),
        ("stock", "0069_auto_20211109_2347"),
        ("stock", "0070_auto_20211128_0151"),
        ("stock", "0071_auto_20211205_1733"),
        ("stock", "0072_remove_stockitem_scheduled_for_deletion"),
        ("stock", "0073_alter_stockitem_belongs_to"),
        ("stock", "0074_alter_stockitem_batch"),
        ("stock", "0075_auto_20220515_1440"),
        ("stock", "0076_alter_stockitem_status"),
        ("stock", "0077_alter_stockitem_notes"),
        ("stock", "0078_alter_stockitem_supplier_part"),
        ("stock", "0079_alter_stocklocation_name"),
        ("stock", "0080_stocklocation_pathstring"),
        ("stock", "0081_auto_20220801_0044"),
        ("stock", "0082_alter_stockitem_link"),
        ("stock", "0083_stocklocation_icon"),
        ("stock", "0084_auto_20220903_0154"),
        ("stock", "0085_auto_20220903_0225"),
        ("stock", "0086_remove_stockitem_uid"),
        ("stock", "0087_auto_20220912_2341"),
        ("stock", "0088_remove_stockitem_infinite"),
        ("stock", "0089_alter_stockitem_purchase_price"),
        ("stock", "0090_stocklocation_structural"),
        ("stock", "0091_alter_stockitem_delete_on_deplete"),
        ("stock", "0092_alter_stockitem_updated"),
        ("stock", "0093_auto_20230217_2140"),
        ("stock", "0094_auto_20230220_0025"),
        ("stock", "0095_stocklocation_external"),
        ("stock", "0096_auto_20230330_1121"),
        ("stock", "0097_alter_stockitem_notes"),
        ("stock", "0098_auto_20230427_2033"),
        ("stock", "0099_alter_stockitem_status"),
        ("stock", "0100_auto_20230515_0004"),
        ("stock", "0100_stockitem_consumed_by"),
        ("stock", "0101_stockitemtestresult_metadata"),
        ("stock", "0102_alter_stockitem_status"),
    ]

    dependencies = [
        ("django_q", "0007_ormq"),
        ("users", "0005_owner_model"),
        ("build", "0042_alter_build_notes"),
        ("part", "0074_partcategorystar"),
        ("stock", "0058_stockitem_packaging"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0005_auto_20220424_2025"),
        ("company", "0046_alter_company_image"),
    ]

    operations = [
        migrations.AlterField(
            model_name="stockitemtracking",
            name="notes",
            field=models.CharField(
                blank=True,
                help_text="Entry notes",
                max_length=512,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="stocklocation",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Description (optional)",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="stocklocation",
            name="name",
            field=models.CharField(
                help_text="Name",
                max_length=100,
                validators=[InvenTree.validators.validate_tree_name],
                verbose_name="Name",
            ),
        ),
        migrations.AlterField(
            model_name="stocklocation",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="Select Owner",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="stock_locations",
                to="users.owner",
                verbose_name="Owner",
            ),
        ),
        migrations.AlterField(
            model_name="stocklocation",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="children",
                to="stock.stocklocation",
                verbose_name="parent",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="delete_on_deplete",
            field=models.BooleanField(
                default=True,
                help_text="Delete this Stock Item when stock is depleted",
                verbose_name="Delete on deplete",
            ),
        ),
        migrations.AlterField(
            model_name="stockitemtracking",
            name="notes",
            field=models.CharField(
                blank=True,
                help_text="Entry notes",
                max_length=512,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.RemoveField(
            model_name="stockitemtracking",
            name="link",
        ),
        migrations.RemoveField(
            model_name="stockitemtracking",
            name="quantity",
        ),
        migrations.RemoveField(
            model_name="stockitemtracking",
            name="system",
        ),
        migrations.RemoveField(
            model_name="stockitemtracking",
            name="title",
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="Select Owner",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="stock_items",
                to="users.owner",
                verbose_name="Owner",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="purchase_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=4,
                default_currency="EUR",
                help_text="Single unit purchase price at time of purchase",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Purchase Price",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="purchase_price_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[], default="", editable=False, max_length=3
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="part",
            field=models.ForeignKey(
                help_text="Base part",
                limit_choices_to={"virtual": False},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_items",
                to="part.part",
                verbose_name="Base Part",
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="serial_int",
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="stockitemattachment",
            name="attachment",
            field=models.FileField(
                help_text="Select file to attach",
                upload_to=InvenTree.models.rename_attachment,
                verbose_name="Attachment",
            ),
        ),
        migrations.AddField(
            model_name="stockitemattachment",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True,
                help_text="Link to external URL",
                null=True,
                verbose_name="Link",
            ),
        ),
        migrations.AlterField(
            model_name="stockitemattachment",
            name="attachment",
            field=models.FileField(
                blank=True,
                help_text="Select file to attach",
                null=True,
                upload_to=InvenTree.models.rename_attachment,
                verbose_name="Attachment",
            ),
        ),
        migrations.AlterField(
            model_name="stockitemattachment",
            name="comment",
            field=models.CharField(
                blank=True,
                help_text="File comment",
                max_length=100,
                verbose_name="Comment",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="belongs_to",
            field=models.ForeignKey(
                blank=True,
                help_text="Is this item installed in another item?",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="installed_parts",
                to="stock.stockitem",
                verbose_name="Installed In",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="batch",
            field=models.CharField(
                blank=True,
                default=stock.models.generate_batch_code,
                help_text="Batch code for this stock item",
                max_length=100,
                null=True,
                verbose_name="Batch Code",
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="stocklocation",
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "OK"),
                    (50, "Attention needed"),
                    (55, "Damaged"),
                    (60, "Destroyed"),
                    (70, "Lost"),
                    (65, "Rejected"),
                    (75, "Quarantined"),
                    (85, "Returned"),
                ],
                default=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Stock Item Notes",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="supplier_part",
            field=models.ForeignKey(
                blank=True,
                help_text="Select a matching supplier part for this stock item",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="stock_items",
                to="company.supplierpart",
                verbose_name="Supplier Part",
            ),
        ),
        migrations.AlterField(
            model_name="stocklocation",
            name="name",
            field=models.CharField(
                help_text="Name", max_length=100, verbose_name="Name"
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="pathstring",
            field=models.CharField(
                blank=True, help_text="Path", max_length=250, verbose_name="Path"
            ),
        ),
        migrations.AlterField(
            model_name="stockitemattachment",
            name="upload_date",
            field=models.DateField(
                auto_now_add=True, null=True, verbose_name="upload date"
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="link",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True,
                help_text="Link to external URL",
                verbose_name="External Link",
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="icon",
            field=models.CharField(
                blank=True,
                help_text="Icon (optional)",
                max_length=100,
                verbose_name="Icon",
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.AlterField(
            model_name="stockitemattachment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.RemoveField(
            model_name="stockitem",
            name="uid",
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.RemoveField(
            model_name="stockitem",
            name="infinite",
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="purchase_price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                blank=True,
                decimal_places=6,
                default_currency="EUR",
                help_text="Single unit purchase price at time of purchase",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Purchase Price",
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="structural",
            field=models.BooleanField(
                default=False,
                help_text="Stock items may not be directly located into a structural stock locations, but may be located to child locations.",
                verbose_name="Structural",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="delete_on_deplete",
            field=models.BooleanField(
                default=stock.models.default_delete_on_deplete,
                help_text="Delete this Stock Item when stock is depleted",
                verbose_name="Delete on deplete",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="updated",
            field=models.DateTimeField(
                auto_now=True,
                help_text="Timestamp of last update",
                null=True,
                verbose_name="Updated",
            ),
        ),
        migrations.AlterModelOptions(
            name="stocklocation",
            options={
                "verbose_name": "Stock Location",
                "verbose_name_plural": "Stock Locations",
            },
        ),
        migrations.AddField(
            model_name="stockitemtracking",
            name="deltas",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="external",
            field=models.BooleanField(
                default=False,
                help_text="This is an external stock location",
                verbose_name="External",
            ),
        ),
        migrations.AddField(
            model_name="stockitemtracking",
            name="tracking_type",
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Markdown notes (optional)",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "OK"),
                    (50, "Attention needed"),
                    (55, "Damaged"),
                    (60, "Destroyed"),
                    (70, "Lost"),
                    (65, "Rejected"),
                    (75, "Quarantined"),
                ],
                default=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="consumed_by",
            field=models.ForeignKey(
                blank=True,
                help_text="Build order which consumed this stock item",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="consumed_stock",
                to="build.build",
                verbose_name="Consumed By",
            ),
        ),
        migrations.AddField(
            model_name="stockitemtestresult",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "OK"),
                    (50, "Attention needed"),
                    (55, "Damaged"),
                    (60, "Destroyed"),
                    (65, "Rejected"),
                    (70, "Lost"),
                    (75, "Quarantined"),
                    (85, "Returned"),
                ],
                default=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
    ]
